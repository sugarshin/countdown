// Generated by CoffeeScript 1.9.0
(function(root, factory) {
  if (typeof module === 'object' && typeof module.exports === 'object') {
    module.exports = factory(require('jquery'));
  } else {
    root.Countdown || (root.Countdown = factory(root.jQuery));
  }
})(this, function($) {
  "use strict";
  var Countdown;
  return Countdown = (function() {
    Countdown.prototype._defaults = {
      dayChar: '.js-countdown-day-char',
      hourChar: '.js-countdown-hour-char',
      minChar: '.js-countdown-min-char',
      secChar: '.js-countdown-sec-char'
    };

    Countdown.prototype._formatNum = function(digit, num) {
      var count, str;
      str = new String(num);
      count = digit - str.length;
      if (count <= 0) {
        return str;
      }
      while (count-- > 0) {
        str = "0" + str;
      }
      return str;
    };

    Countdown.prototype._configure = function(opts) {
      this.opts = $.extend({}, this._defaults, opts);
      this._aDay = 24 * 60 * 60 * 1000;
      this.$dayChar = $(this.opts.dayChar).text('00');
      this.$hourChar = $(this.opts.hourChar).text('00');
      this.$minChar = $(this.opts.minChar).text('00');
      return this.$secChar = $(this.opts.secChar).text('00');
    };

    function Countdown(_at_end, opts) {
      this.end = _at_end;
      this._configure(opts);
    }

    Countdown.prototype.updateChar = function(d, h, m, s) {
      this.$dayChar.text(d);
      this.$hourChar.text(h);
      this.$minChar.text(m);
      this.$secChar.text(s);
      return this;
    };

    Countdown.prototype.update = function(remaind) {
      var d, h, m, s;
      d = this._formatNum(2, Math.floor(remaind / this._aDay));
      h = this._formatNum(2, Math.floor((remaind % this._aDay) / (60 * 60 * 1000)));
      m = this._formatNum(2, Math.floor((remaind % this._aDay) / (60 * 1000)) % 60);
      s = this._formatNum(2, Math.floor((remaind % this._aDay) / 1000) % 60 % 60);
      this.updateChar(d, h, m, s);
      return this;
    };

    Countdown.prototype.start = function() {
      var _start;
      (_start = (function(_this) {
        return function() {
          var remaind, start, timer;
          start = new Date;
          remaind = _this.end - start;
          if (remaind > 0) {
            return timer = setTimeout(function() {
              _this.update(remaind);
              return _start();
            }, 1000);
          } else {
            return clearTimeout(timer);
          }
        };
      })(this))();
      return this;
    };

    return Countdown;

  })();
});
